name: Release Creation

env:
    NODE_VERSION: 22


on:
    push:
        tags:
            - 'release-*'

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        -   uses: actions/checkout@v4

        # Set up our some variables for future use
        # Adapted from https://github.community/t/how-to-get-just-the-tag-name/16241/7
        # Tag name: ${{ env.TAG_NAME }}
        # Zip name: ${{ env.ZIP_NAME }}
        # Expected Release Download URL: ${{ env.RELEASE_DOWNLOAD_URL }}
        # Expected Release system.json URL: ${{ env.RELEASE_INSTALL_URL }}
        -   name: Set up variables
            id: get_vars
            run: |
                TAG=${GITHUB_REF/refs\/tags\//}
                PACKAGE_ID=${{ steps.manifest.outputs.id }}
                PACKAGE_TYPE=${{ steps.type.outputs.value }}
                echo "TAG_NAME=$TAG" >> $GITHUB_ENV
                echo "PACKAGE_ID=$PACKAGE_ID" >> $GITHUB_ENV
                echo "PACKAGE_TYPE=$PACKAGE_TYPE" >> $GITHUB_ENV
                echo "ZIP_NAME=$PACKAGE_ID-$TAG.zip" >> $GITHUB_ENV
                echo "RELEASE_DOWNLOAD_URL=https://github.com/${{ github.repository }}/releases/download/$TAG/$PACKAGE_ID-$TAG.zip" >> $GITHUB_ENV
                echo "RELEASE_INSTALL_URL=https://github.com/${{ github.repository }}/releases/download/$TAG/$PACKAGE_TYPE.json" >> $GITHUB_ENV
        
        -   name: Use Node.js ${{ env.NODE_VERSION }}
            uses: actions/setup-node@v4
            with:
                node-version: ${{ env.NODE_VERSION }}
                cache: 'npm'
        
        -   name: Install Dependencies
            run: npm ci
        
        -   name: Build All
            run: |
                npm run build:code --if-present
                mv --force thi-compile.mjs thi.mjs

        -   name: Zip package
            run: zip ${{ env.ZIP_NAME }} -r ${{ steps.archive.outputs.result }}
          
        -   name: Fetch Release Body
            id: release
            uses: cardinalby/git-get-release-action@v1
            env:
                GITHUB_TOKEN: ${{ github.token }}
            with:
                tag: ${{ env.TAG_NAME }}
                doNotFailIfNotFound: true

        -   name: Update Release with Files
            id: create_version_release
            uses: ncipollo/release-action@v1
            with:
                allowUpdates: true # Set this to false if you want to prevent updating existing releases
                name: ${{ env.TAG_NAME }}
                draft: false
                prerelease: true
                omitDraftDuringUpdate: true
                omitPrereleaseDuringUpdate: true
                token: ${{ secrets.GITHUB_TOKEN }}
                artifacts: './${{ env.PACKAGE_TYPE }}.json, ./${{ env.ZIP_NAME }}'
                tag: ${{ env.TAG_NAME }}
                body: |
                    ${{ steps.release.outputs.body }}
                    **Installation:** To manually install this release, please use the following manifest URL: ${{ env.RELEASE_INSTALL_URL }}